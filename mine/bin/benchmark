#!/usr/bin/env python
# gpu-benchmark: benchmark gpu hashing algorithms for three minutes each
# REQUIRES ./ccminer (https://github.com/tpruvot/ccminer)
#      AND ./eqm (https://github.com/nicehash/nheqminer) WITH quit_on_eof PATCH!
#
#
# Copyright 2017-2018  Lucas Morales <lucas@lucasem.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

import subprocess
from time import sleep
from os.path import dirname, realpath
HERE = dirname(realpath(__file__))

#######################
###### constants ######
#######################

# XXX: set these
coin, addr = "BTC", "17LUCASJ3GzbFZptbSiYxSv2Hf8mPieYvE"

######################
######## body ########
######################

algos = [ # (zpool_algo, ccminer_name, port, doubleup)
    ("bitcore", "bitcore", 3556, False),
    ("blake2s", "blake2s", 5766, False),
    ("blakecoin", "blakecoin", 5743, True),
    ("c11", "c11", 3573, False),
    ("equihash", "equihash", 2142, True),
    ("groestl", "groestl", 5333, False),
    ("keccak", "keccak", 5133, False),
    ("lbry", "lbry", 3334, False),
    ("lyra2v2", "lyra2v2", 4533, True),
    ("lyra2z", "lyra2z", 4553, False),
    ("myr-gr", "myr-gr", 5433, False),
    ("neoscrypt", "neoscrypt", 4233, False),
    ("nist5", "nist5", 3833, False),
    ("phi", "phi", 8333, False),
    ("polytimos", "polytimos", 8463, False),
    ("quark", "quark", 4033, False),
    ("qubit", "qubit", 4733, False),
    ("sib", "sib", 5033, False),
    ("skein", "skein", 4933, False),
    ("skunk", "skunk", 8433, False),
    ("timetravel", "timetravel", 3555, False),
    ("tribus", "tribus", 8533, False),
    ("veltor", "veltor", 5034, False),
    ("x11evo", "x11evo", 3553, False),
    ("x11", "x11", 3533, False),
    ("x13", "x13", 3633, False),
    ("x14", "x14", 3933, False),
    ("x17", "x17", 3737, False),
]
start = 0


with open('tmp', 'w') as out:
    print("output will be saved in ./tmp. To view, use")
    print("$ less -R ./tmp")
    for i in range(start, len(algos)):
        zalg, calg, port, doubleup = algos[i]
        out.write(f"\n\n{'='*18}\n    mining {calg}\n{'='*18}\n\n")
    
        devices = "0,0" if doubleup else "0"
        if zalg == "equihash":
            p = subprocess.Popen([f"{HERE}/eqm",
                "-l", "equihash.mine.zpool.ca:2142",
                "-t", "0", "-u", addr, "-p", f"c={coin}",
                "-cv", "0", "-cd", "0", "0"],
                stdout=out)
        else:
            p = subprocess.Popen([f"{HERE}/ccminer",
                "--url", f"stratum+tcp://{zalg}.mine.zpool.ca:{port}",
                "--user", addr, "--pass", f"c={coin}",
                "--algo", calg, "--devices", devices,
                "--gpu-clock", "1700", "--mem-clock", "11000", "--plimit", "375W"],
                stdout=out)
        sleep(180)
        p.kill()
